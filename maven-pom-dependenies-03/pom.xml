<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">  
  <modelVersion>4.0.0</modelVersion>  
  <!--  GAVP属性-->  
  <!--  不会改变-->  
  <groupId>edu.zjgs</groupId>  
  <artifactId>maven-pom-dependenies-03</artifactId>  
  <!--  构建过程、部署、修改-->  
  <version>1.0-SNAPSHOT</version>  
  <packaging>war</packaging>
  <properties> 
    <!--    声明的一个变量，可以引用${jackson.version}  推荐技术名.version-->  
    <jackson.version>2.14.2</jackson.version>  
    <maven.compiler.source>8</maven.compiler.source>  
    <maven.compiler.target>8</maven.compiler.target>  
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> 
  </properties>  
  <!--
   通过编写依赖jar包的gav必要属性，引入第三方依赖！
   scope属性是可选的，可以指定依赖生效范围！
   依赖信息查询方式：
      1. maven仓库信息官网 https://mvnrepository.com/
      2. mavensearch插件搜索
 -->  
  <dependencies> 
    <dependency> 
      <groupId>com.fasterxml.jackson.core</groupId>  
      <artifactId>jackson-core</artifactId>  
      <version>${jackson.version}</version>  
      <scope>compile</scope>  
      <!--
    生效范围
    - compile ：main目录有效  test目录有效  打包运行有效 [默认]
    - provided：main目录有效  test目录有效  Servlet有效
    - runtime： main目录×    test目录×    打包运行有效————MySQL驱动有效  反射注册驱动 Class.forName(com.mysql.cj.jdbc.Driver)
    - test:    main目录×    test目录有效测试代码有效————junit有效 @Test
 --> 
    </dependency>  
    <dependency> 
      <groupId>junit</groupId>  
      <artifactId>junit</artifactId>  
      <version>4.12</version>  
      <scope>test</scope>  
      <!--
      生效范围
      - test:    test目录有效测试代码有效           常常在junit中使用 @Test注解
      --> 
    </dependency>  
    <dependency> 
      <groupId>com.fasterxml.jackson.core</groupId>  
      <artifactId>jackson-databind</artifactId>  
      <version>2.14.2</version> 
    </dependency> 
  </dependencies>  
  <!--
1、短路优先原
2、依赖路径长度相同情况下，则“先声明优先”

例子：
前提：
   A 1.1 -> B 1.1 -> C 1.1
   F 2.2 -> B 2.2

pom声明：
   F 2.2
   A 1.1

   B 2.2


最终会引入：F 2.2    A 1.1   B 2.2  不会引入C 1.1 发生冲突后续以来全部终止v

--> 
</project>
